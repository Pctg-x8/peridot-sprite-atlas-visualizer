// Bindings generated by `windows-bindgen` 0.60.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

pub mod Microsoft {
    pub mod Graphics {
        pub mod Canvas {
            #[repr(transparent)]
            #[derive(Clone, Copy, Debug, Default, Eq, PartialEq)]
            pub struct CanvasComposite(pub i32);
            impl CanvasComposite {
                pub const SourceOver: Self = Self(0i32);
                pub const DestinationOver: Self = Self(1i32);
                pub const SourceIn: Self = Self(2i32);
                pub const DestinationIn: Self = Self(3i32);
                pub const SourceOut: Self = Self(4i32);
                pub const DestinationOut: Self = Self(5i32);
                pub const SourceAtop: Self = Self(6i32);
                pub const DestinationAtop: Self = Self(7i32);
                pub const Xor: Self = Self(8i32);
                pub const Add: Self = Self(9i32);
                pub const Copy: Self = Self(10i32);
                pub const BoundedCopy: Self = Self(11i32);
                pub const MaskInvert: Self = Self(12i32);
            }
            impl windows_core::TypeKind for CanvasComposite {
                type TypeKind = windows_core::CopyType;
            }
            impl windows_core::RuntimeType for CanvasComposite {
                const SIGNATURE: windows_core::imp::ConstBuffer =
                    windows_core::imp::ConstBuffer::from_slice(
                        b"enum(Microsoft.Graphics.Canvas.CanvasComposite;i4)",
                    );
            }
            windows_core::imp::define_interface!(
                ICanvasImage,
                ICanvasImage_Vtbl,
                0x794966d3_6a64_47e9_8da8_b46aaa24d53b
            );
            impl windows_core::RuntimeType for ICanvasImage {
                const SIGNATURE: windows_core::imp::ConstBuffer =
                    windows_core::imp::ConstBuffer::for_interface::<Self>();
            }
            windows_core::imp::interface_hierarchy!(
                ICanvasImage,
                windows_core::IUnknown,
                windows_core::IInspectable
            );
            windows_core::imp::required_hierarchy!(
                ICanvasImage,
                super::super::super::Windows::Foundation::IClosable,
                windows::Graphics::Effects::IGraphicsEffectSource
            );
            impl ICanvasImage {
                pub fn Close(&self) -> windows_core::Result<()> {
                    let this = &windows_core::Interface::cast::<
                        super::super::super::Windows::Foundation::IClosable,
                    >(self)?;
                    unsafe {
                        (windows_core::Interface::vtable(this).Close)(
                            windows_core::Interface::as_raw(this),
                        )
                        .ok()
                    }
                }
            }
            impl windows_core::RuntimeName for ICanvasImage {
                const NAME: &'static str = "Microsoft.Graphics.Canvas.ICanvasImage";
            }
            pub trait ICanvasImage_Impl:
                super::super::super::Windows::Foundation::IClosable_Impl
                + windows::Graphics::Effects::IGraphicsEffectSource_Impl
            {
            }
            impl ICanvasImage_Vtbl {
                pub const fn new<Identity: ICanvasImage_Impl, const OFFSET: isize>() -> Self {
                    Self {
                        base__: windows_core::IInspectable_Vtbl::new::<
                            Identity,
                            ICanvasImage,
                            OFFSET,
                        >(),
                        GetBounds: 0,
                        GetBoundsWithTransform: 0,
                    }
                }
                pub fn matches(iid: &windows_core::GUID) -> bool {
                    iid == &<ICanvasImage as windows_core::Interface>::IID
                }
            }
            #[repr(C)]
            pub struct ICanvasImage_Vtbl {
                pub base__: windows_core::IInspectable_Vtbl,
                GetBounds: usize,
                GetBoundsWithTransform: usize,
            }
            pub mod Effects {
                #[repr(transparent)]
                #[derive(Clone, Debug, Eq, PartialEq)]
                pub struct ColorSourceEffect(windows_core::IUnknown);
                windows_core::imp::interface_hierarchy!(
                    ColorSourceEffect,
                    windows_core::IUnknown,
                    windows_core::IInspectable
                );
                windows_core::imp::required_hierarchy!(
                    ColorSourceEffect,
                    ICanvasEffect,
                    super::ICanvasImage,
                    super::super::super::super::Windows::Foundation::IClosable,
                    windows::Graphics::Effects::IGraphicsEffect,
                    windows::Graphics::Effects::IGraphicsEffectSource
                );
                impl ColorSourceEffect {
                    pub fn new() -> windows_core::Result<Self> {
                        Self::IActivationFactory(|f| f.ActivateInstance::<Self>())
                    }
                    fn IActivationFactory<
                        R,
                        F: FnOnce(&windows_core::imp::IGenericFactory) -> windows_core::Result<R>,
                    >(
                        callback: F,
                    ) -> windows_core::Result<R> {
                        static SHARED: windows_core::imp::FactoryCache<
                            ColorSourceEffect,
                            windows_core::imp::IGenericFactory,
                        > = windows_core::imp::FactoryCache::new();
                        SHARED.call(callback)
                    }
                    pub fn CacheOutput(&self) -> windows_core::Result<bool> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).CacheOutput)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetCacheOutput(&self, value: bool) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetCacheOutput)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Close(&self) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            super::super::super::super::Windows::Foundation::IClosable,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).Close)(
                                windows_core::Interface::as_raw(this),
                            )
                            .ok()
                        }
                    }
                    pub fn Color(&self) -> windows_core::Result<windows::UI::Color> {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Color)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetColor(&self, value: windows::UI::Color) -> windows_core::Result<()> {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetColor)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn ColorHdr(&self) -> windows_core::Result<windows_numerics::Vector4> {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).ColorHdr)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetColorHdr(
                        &self,
                        value: windows_numerics::Vector4,
                    ) -> windows_core::Result<()> {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetColorHdr)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Name(&self) -> windows_core::Result<windows_core::HSTRING> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Name)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| core::mem::transmute(result__))
                        }
                    }
                    pub fn SetName(
                        &self,
                        name: &windows_core::HSTRING,
                    ) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetName)(
                                windows_core::Interface::as_raw(this),
                                core::mem::transmute_copy(name),
                            )
                            .ok()
                        }
                    }
                }
                impl windows_core::RuntimeType for ColorSourceEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_class::<Self, IColorSourceEffect>();
                }
                unsafe impl windows_core::Interface for ColorSourceEffect {
                    type Vtable = <IColorSourceEffect as windows_core::Interface>::Vtable;
                    const IID: windows_core::GUID =
                        <IColorSourceEffect as windows_core::Interface>::IID;
                }
                impl windows_core::RuntimeName for ColorSourceEffect {
                    const NAME: &'static str =
                        "Microsoft.Graphics.Canvas.Effects.ColorSourceEffect";
                }
                unsafe impl Send for ColorSourceEffect {}
                unsafe impl Sync for ColorSourceEffect {}
                #[repr(transparent)]
                #[derive(Clone, Debug, Eq, PartialEq)]
                pub struct CompositeEffect(windows_core::IUnknown);
                windows_core::imp::interface_hierarchy!(
                    CompositeEffect,
                    windows_core::IUnknown,
                    windows_core::IInspectable
                );
                windows_core::imp::required_hierarchy!(
                    CompositeEffect,
                    ICanvasEffect,
                    super::ICanvasImage,
                    super::super::super::super::Windows::Foundation::IClosable,
                    windows::Graphics::Effects::IGraphicsEffect,
                    windows::Graphics::Effects::IGraphicsEffectSource
                );
                impl CompositeEffect {
                    pub fn new() -> windows_core::Result<Self> {
                        Self::IActivationFactory(|f| f.ActivateInstance::<Self>())
                    }
                    fn IActivationFactory<
                        R,
                        F: FnOnce(&windows_core::imp::IGenericFactory) -> windows_core::Result<R>,
                    >(
                        callback: F,
                    ) -> windows_core::Result<R> {
                        static SHARED: windows_core::imp::FactoryCache<
                            CompositeEffect,
                            windows_core::imp::IGenericFactory,
                        > = windows_core::imp::FactoryCache::new();
                        SHARED.call(callback)
                    }
                    pub fn CacheOutput(&self) -> windows_core::Result<bool> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).CacheOutput)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetCacheOutput(&self, value: bool) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetCacheOutput)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Close(&self) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            super::super::super::super::Windows::Foundation::IClosable,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).Close)(
                                windows_core::Interface::as_raw(this),
                            )
                            .ok()
                        }
                    }
                    pub fn Mode(&self) -> windows_core::Result<super::CanvasComposite> {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Mode)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetMode(
                        &self,
                        value: super::CanvasComposite,
                    ) -> windows_core::Result<()> {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetMode)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Sources(
                        &self,
                    ) -> windows_core::Result<
                        windows_collections::IVector<
                            windows::Graphics::Effects::IGraphicsEffectSource,
                        >,
                    > {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Sources)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .and_then(|| windows_core::Type::from_abi(result__))
                        }
                    }
                    pub fn Name(&self) -> windows_core::Result<windows_core::HSTRING> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Name)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| core::mem::transmute(result__))
                        }
                    }
                    pub fn SetName(
                        &self,
                        name: &windows_core::HSTRING,
                    ) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetName)(
                                windows_core::Interface::as_raw(this),
                                core::mem::transmute_copy(name),
                            )
                            .ok()
                        }
                    }
                }
                impl windows_core::RuntimeType for CompositeEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_class::<Self, ICompositeEffect>();
                }
                unsafe impl windows_core::Interface for CompositeEffect {
                    type Vtable = <ICompositeEffect as windows_core::Interface>::Vtable;
                    const IID: windows_core::GUID =
                        <ICompositeEffect as windows_core::Interface>::IID;
                }
                impl windows_core::RuntimeName for CompositeEffect {
                    const NAME: &'static str = "Microsoft.Graphics.Canvas.Effects.CompositeEffect";
                }
                unsafe impl Send for CompositeEffect {}
                unsafe impl Sync for CompositeEffect {}
                #[repr(transparent)]
                #[derive(Clone, Debug, Eq, PartialEq)]
                pub struct GaussianBlurEffect(windows_core::IUnknown);
                windows_core::imp::interface_hierarchy!(
                    GaussianBlurEffect,
                    windows_core::IUnknown,
                    windows_core::IInspectable
                );
                windows_core::imp::required_hierarchy!(
                    GaussianBlurEffect,
                    ICanvasEffect,
                    super::ICanvasImage,
                    super::super::super::super::Windows::Foundation::IClosable,
                    windows::Graphics::Effects::IGraphicsEffect,
                    windows::Graphics::Effects::IGraphicsEffectSource
                );
                impl GaussianBlurEffect {
                    pub fn new() -> windows_core::Result<Self> {
                        Self::IActivationFactory(|f| f.ActivateInstance::<Self>())
                    }
                    fn IActivationFactory<
                        R,
                        F: FnOnce(&windows_core::imp::IGenericFactory) -> windows_core::Result<R>,
                    >(
                        callback: F,
                    ) -> windows_core::Result<R> {
                        static SHARED: windows_core::imp::FactoryCache<
                            GaussianBlurEffect,
                            windows_core::imp::IGenericFactory,
                        > = windows_core::imp::FactoryCache::new();
                        SHARED.call(callback)
                    }
                    pub fn CacheOutput(&self) -> windows_core::Result<bool> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).CacheOutput)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetCacheOutput(&self, value: bool) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<ICanvasEffect>(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetCacheOutput)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Close(&self) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            super::super::super::super::Windows::Foundation::IClosable,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).Close)(
                                windows_core::Interface::as_raw(this),
                            )
                            .ok()
                        }
                    }
                    pub fn BlurAmount(&self) -> windows_core::Result<f32> {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).BlurAmount)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetBlurAmount(&self, value: f32) -> windows_core::Result<()> {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetBlurAmount)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Source(
                        &self,
                    ) -> windows_core::Result<windows::Graphics::Effects::IGraphicsEffectSource>
                    {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Source)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .and_then(|| windows_core::Type::from_abi(result__))
                        }
                    }
                    pub fn SetSource<P0>(&self, source: P0) -> windows_core::Result<()>
                    where
                        P0: windows_core::Param<windows::Graphics::Effects::IGraphicsEffectSource>,
                    {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetSource)(
                                windows_core::Interface::as_raw(this),
                                source.param().abi(),
                            )
                            .ok()
                        }
                    }
                    pub fn Name(&self) -> windows_core::Result<windows_core::HSTRING> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Name)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| core::mem::transmute(result__))
                        }
                    }
                    pub fn SetName(
                        &self,
                        name: &windows_core::HSTRING,
                    ) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetName)(
                                windows_core::Interface::as_raw(this),
                                core::mem::transmute_copy(name),
                            )
                            .ok()
                        }
                    }
                }
                impl windows_core::RuntimeType for GaussianBlurEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_class::<Self, IGaussianBlurEffect>();
                }
                unsafe impl windows_core::Interface for GaussianBlurEffect {
                    type Vtable = <IGaussianBlurEffect as windows_core::Interface>::Vtable;
                    const IID: windows_core::GUID =
                        <IGaussianBlurEffect as windows_core::Interface>::IID;
                }
                impl windows_core::RuntimeName for GaussianBlurEffect {
                    const NAME: &'static str =
                        "Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect";
                }
                unsafe impl Send for GaussianBlurEffect {}
                unsafe impl Sync for GaussianBlurEffect {}
                windows_core::imp::define_interface!(
                    ICanvasEffect,
                    ICanvasEffect_Vtbl,
                    0x0ef96f8c_9b5e_4bf0_a399_aad8ce53db55
                );
                impl windows_core::RuntimeType for ICanvasEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_interface::<Self>();
                }
                windows_core::imp::interface_hierarchy!(
                    ICanvasEffect,
                    windows_core::IUnknown,
                    windows_core::IInspectable
                );
                windows_core::imp::required_hierarchy!(
                    ICanvasEffect,
                    super::ICanvasImage,
                    super::super::super::super::Windows::Foundation::IClosable,
                    windows::Graphics::Effects::IGraphicsEffect,
                    windows::Graphics::Effects::IGraphicsEffectSource
                );
                impl ICanvasEffect {
                    pub fn CacheOutput(&self) -> windows_core::Result<bool> {
                        let this = self;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).CacheOutput)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| result__)
                        }
                    }
                    pub fn SetCacheOutput(&self, value: bool) -> windows_core::Result<()> {
                        let this = self;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetCacheOutput)(
                                windows_core::Interface::as_raw(this),
                                value,
                            )
                            .ok()
                        }
                    }
                    pub fn Close(&self) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            super::super::super::super::Windows::Foundation::IClosable,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).Close)(
                                windows_core::Interface::as_raw(this),
                            )
                            .ok()
                        }
                    }
                    pub fn Name(&self) -> windows_core::Result<windows_core::HSTRING> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            let mut result__ = core::mem::zeroed();
                            (windows_core::Interface::vtable(this).Name)(
                                windows_core::Interface::as_raw(this),
                                &mut result__,
                            )
                            .map(|| core::mem::transmute(result__))
                        }
                    }
                    pub fn SetName(
                        &self,
                        name: &windows_core::HSTRING,
                    ) -> windows_core::Result<()> {
                        let this = &windows_core::Interface::cast::<
                            windows::Graphics::Effects::IGraphicsEffect,
                        >(self)?;
                        unsafe {
                            (windows_core::Interface::vtable(this).SetName)(
                                windows_core::Interface::as_raw(this),
                                core::mem::transmute_copy(name),
                            )
                            .ok()
                        }
                    }
                }
                impl windows_core::RuntimeName for ICanvasEffect {
                    const NAME: &'static str = "Microsoft.Graphics.Canvas.Effects.ICanvasEffect";
                }
                pub trait ICanvasEffect_Impl:
                    super::ICanvasImage_Impl
                    + super::super::super::super::Windows::Foundation::IClosable_Impl
                    + windows::Graphics::Effects::IGraphicsEffect_Impl
                    + windows::Graphics::Effects::IGraphicsEffectSource_Impl
                {
                    fn CacheOutput(&self) -> windows_core::Result<bool>;
                    fn SetCacheOutput(&self, value: bool) -> windows_core::Result<()>;
                }
                impl ICanvasEffect_Vtbl {
                    pub const fn new<Identity: ICanvasEffect_Impl, const OFFSET: isize>() -> Self {
                        unsafe extern "system" fn CacheOutput<
                            Identity: ICanvasEffect_Impl,
                            const OFFSET: isize,
                        >(
                            this: *mut core::ffi::c_void,
                            result__: *mut bool,
                        ) -> windows_core::HRESULT {
                            unsafe {
                                let this: &Identity = &*((this as *const *const ()).offset(OFFSET)
                                    as *const Identity);
                                match ICanvasEffect_Impl::CacheOutput(this) {
                                    Ok(ok__) => {
                                        result__.write(core::mem::transmute_copy(&ok__));
                                        windows_core::HRESULT(0)
                                    }
                                    Err(err) => err.into(),
                                }
                            }
                        }
                        unsafe extern "system" fn SetCacheOutput<
                            Identity: ICanvasEffect_Impl,
                            const OFFSET: isize,
                        >(
                            this: *mut core::ffi::c_void,
                            value: bool,
                        ) -> windows_core::HRESULT {
                            unsafe {
                                let this: &Identity = &*((this as *const *const ()).offset(OFFSET)
                                    as *const Identity);
                                ICanvasEffect_Impl::SetCacheOutput(this, value).into()
                            }
                        }
                        Self {
                            base__: windows_core::IInspectable_Vtbl::new::<
                                Identity,
                                ICanvasEffect,
                                OFFSET,
                            >(),
                            CacheOutput: CacheOutput::<Identity, OFFSET>,
                            SetCacheOutput: SetCacheOutput::<Identity, OFFSET>,
                            BufferPrecision: 0,
                            SetBufferPrecision: 0,
                            InvalidateSourceRectangle: 0,
                            GetInvalidRectangles: 0,
                            GetRequiredSourceRectangle: 0,
                            GetRequiredSourceRectangles: 0,
                        }
                    }
                    pub fn matches(iid: &windows_core::GUID) -> bool {
                        iid == &<ICanvasEffect as windows_core::Interface>::IID
                    }
                }
                #[repr(C)]
                pub struct ICanvasEffect_Vtbl {
                    pub base__: windows_core::IInspectable_Vtbl,
                    pub CacheOutput: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut bool,
                    )
                        -> windows_core::HRESULT,
                    pub SetCacheOutput: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        bool,
                    )
                        -> windows_core::HRESULT,
                    BufferPrecision: usize,
                    SetBufferPrecision: usize,
                    InvalidateSourceRectangle: usize,
                    GetInvalidRectangles: usize,
                    GetRequiredSourceRectangle: usize,
                    GetRequiredSourceRectangles: usize,
                }
                windows_core::imp::define_interface!(
                    IColorSourceEffect,
                    IColorSourceEffect_Vtbl,
                    0x25f942c7_7fee_518a_ba7b_22a0060af7f6
                );
                impl windows_core::RuntimeType for IColorSourceEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_interface::<Self>();
                }
                #[repr(C)]
                pub struct IColorSourceEffect_Vtbl {
                    pub base__: windows_core::IInspectable_Vtbl,
                    pub Color: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut windows::UI::Color,
                    )
                        -> windows_core::HRESULT,
                    pub SetColor: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        windows::UI::Color,
                    )
                        -> windows_core::HRESULT,
                    pub ColorHdr: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut windows_numerics::Vector4,
                    )
                        -> windows_core::HRESULT,
                    pub SetColorHdr: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        windows_numerics::Vector4,
                    )
                        -> windows_core::HRESULT,
                }
                windows_core::imp::define_interface!(
                    ICompositeEffect,
                    ICompositeEffect_Vtbl,
                    0xf8808c48_cdc7_5db4_807c_b9344ff71984
                );
                impl windows_core::RuntimeType for ICompositeEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_interface::<Self>();
                }
                #[repr(C)]
                pub struct ICompositeEffect_Vtbl {
                    pub base__: windows_core::IInspectable_Vtbl,
                    pub Mode: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut super::CanvasComposite,
                    )
                        -> windows_core::HRESULT,
                    pub SetMode: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        super::CanvasComposite,
                    )
                        -> windows_core::HRESULT,
                    pub Sources: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut *mut core::ffi::c_void,
                    )
                        -> windows_core::HRESULT,
                }
                windows_core::imp::define_interface!(
                    IGaussianBlurEffect,
                    IGaussianBlurEffect_Vtbl,
                    0xa82ec394_6734_5830_9123_2c82b27dd3c0
                );
                impl windows_core::RuntimeType for IGaussianBlurEffect {
                    const SIGNATURE: windows_core::imp::ConstBuffer =
                        windows_core::imp::ConstBuffer::for_interface::<Self>();
                }
                #[repr(C)]
                pub struct IGaussianBlurEffect_Vtbl {
                    pub base__: windows_core::IInspectable_Vtbl,
                    pub BlurAmount: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut f32,
                    )
                        -> windows_core::HRESULT,
                    pub SetBlurAmount: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        f32,
                    )
                        -> windows_core::HRESULT,
                    Optimization: usize,
                    SetOptimization: usize,
                    BorderMode: usize,
                    SetBorderMode: usize,
                    pub Source: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut *mut core::ffi::c_void,
                    )
                        -> windows_core::HRESULT,
                    pub SetSource: unsafe extern "system" fn(
                        *mut core::ffi::c_void,
                        *mut core::ffi::c_void,
                    )
                        -> windows_core::HRESULT,
                }
            }
        }
    }
}
pub mod Windows {
    pub mod Foundation {
        windows_core::imp::define_interface!(
            IClosable,
            IClosable_Vtbl,
            0x30d5a829_7fa4_4026_83bb_d75bae4ea99e
        );
        impl windows_core::RuntimeType for IClosable {
            const SIGNATURE: windows_core::imp::ConstBuffer =
                windows_core::imp::ConstBuffer::for_interface::<Self>();
        }
        windows_core::imp::interface_hierarchy!(
            IClosable,
            windows_core::IUnknown,
            windows_core::IInspectable
        );
        impl IClosable {
            pub fn Close(&self) -> windows_core::Result<()> {
                let this = self;
                unsafe {
                    (windows_core::Interface::vtable(this).Close)(windows_core::Interface::as_raw(
                        this,
                    ))
                    .ok()
                }
            }
        }
        impl windows_core::RuntimeName for IClosable {
            const NAME: &'static str = "Windows.Foundation.IClosable";
        }
        pub trait IClosable_Impl: windows_core::IUnknownImpl {
            fn Close(&self) -> windows_core::Result<()>;
        }
        impl IClosable_Vtbl {
            pub const fn new<Identity: IClosable_Impl, const OFFSET: isize>() -> Self {
                unsafe extern "system" fn Close<Identity: IClosable_Impl, const OFFSET: isize>(
                    this: *mut core::ffi::c_void,
                ) -> windows_core::HRESULT {
                    unsafe {
                        let this: &Identity =
                            &*((this as *const *const ()).offset(OFFSET) as *const Identity);
                        IClosable_Impl::Close(this).into()
                    }
                }
                Self {
                    base__: windows_core::IInspectable_Vtbl::new::<Identity, IClosable, OFFSET>(),
                    Close: Close::<Identity, OFFSET>,
                }
            }
            pub fn matches(iid: &windows_core::GUID) -> bool {
                iid == &<IClosable as windows_core::Interface>::IID
            }
        }
        #[repr(C)]
        pub struct IClosable_Vtbl {
            pub base__: windows_core::IInspectable_Vtbl,
            pub Close: unsafe extern "system" fn(*mut core::ffi::c_void) -> windows_core::HRESULT,
        }
    }
}
